{"ast":null,"code":"import * as i0 from \"@angular/core\";\nclass ConversionPipe {\n  constructor() {\n    this.forexRates = [{\n      \"id\": \"USD\",\n      \"value\": 1.126735\n    }, {\n      \"id\": \"GBP\",\n      \"value\": 0.876893\n    }, {\n      \"id\": \"INR\",\n      \"value\": 79.677056\n    }];\n  }\n  transform(amount, fromCurrency, toCurrency) {\n    const fromRate = this.forexRates.find(rate => rate.id === fromCurrency)?.value || 1;\n    const toRate = this.forexRates.find(rate => rate.id === toCurrency)?.value || 1;\n    const convertedAmount = amount / fromRate * toRate;\n    return convertedAmount.toFixed(2); // Return formatted value\n  }\n}\n\nConversionPipe.ɵfac = function ConversionPipe_Factory(t) {\n  return new (t || ConversionPipe)();\n};\nConversionPipe.ɵpipe = /*@__PURE__*/i0.ɵɵdefinePipe({\n  name: \"forexRates\",\n  type: ConversionPipe,\n  pure: true\n});\nexport { ConversionPipe };","map":{"version":3,"names":["ConversionPipe","constructor","forexRates","transform","amount","fromCurrency","toCurrency","fromRate","find","rate","id","value","toRate","convertedAmount","toFixed","pure"],"sources":["/home/coder/project/workspace/angularapp/src/app/forex.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'forexRates'\n})\nexport class ConversionPipe implements PipeTransform {\n  forexRates: { id: string, value: number }[] = [\n    { \"id\": \"USD\", \"value\": 1.126735 },\n    { \"id\": \"GBP\", \"value\": 0.876893 },\n    { \"id\": \"INR\", \"value\": 79.677056 }\n  ];\n\n  transform(amount: number, fromCurrency: string, toCurrency: string): string {\n    const fromRate = this.forexRates.find(rate => rate.id === fromCurrency)?.value || 1;\n    const toRate = this.forexRates.find(rate => rate.id === toCurrency)?.value || 1;\n\n    const convertedAmount = (amount / fromRate) * toRate;\n    return convertedAmount.toFixed(2); // Return formatted value\n  }\n}"],"mappings":";AAEA,MAGaA,cAAc;EAH3BC,YAAA;IAIE,KAAAC,UAAU,GAAoC,CAC5C;MAAE,IAAI,EAAE,KAAK;MAAE,OAAO,EAAE;IAAQ,CAAE,EAClC;MAAE,IAAI,EAAE,KAAK;MAAE,OAAO,EAAE;IAAQ,CAAE,EAClC;MAAE,IAAI,EAAE,KAAK;MAAE,OAAO,EAAE;IAAS,CAAE,CACpC;;EAEDC,SAASA,CAACC,MAAc,EAAEC,YAAoB,EAAEC,UAAkB;IAChE,MAAMC,QAAQ,GAAG,IAAI,CAACL,UAAU,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,YAAY,CAAC,EAAEM,KAAK,IAAI,CAAC;IACnF,MAAMC,MAAM,GAAG,IAAI,CAACV,UAAU,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,UAAU,CAAC,EAAEK,KAAK,IAAI,CAAC;IAE/E,MAAME,eAAe,GAAIT,MAAM,GAAGG,QAAQ,GAAIK,MAAM;IACpD,OAAOC,eAAe,CAACC,OAAO,CAAC,CAAC,CAAC,CAAC,CAAC;EACrC;;;AAbWd,cAAc,C;mBAAdA,cAAc;AAAA;AAAdA,cAAc,C;;QAAdA,cAAc;EAAAe,IAAA;AAAA;SAAdf,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}