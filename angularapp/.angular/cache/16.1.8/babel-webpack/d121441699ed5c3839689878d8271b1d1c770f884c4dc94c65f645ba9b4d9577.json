{"ast":null,"code":"import { __decorate } from \"tslib\";\nimport { Pipe } from '@angular/core';\nlet ForexRatesPipe = class ForexRatesPipe {\n  constructor(forexRates) {\n    this.forexRates = forexRates;\n  }\n  transform(value, fromCurrency, toCurrency) {\n    const fromRate = this.forexRates.find(rate => rate.id === fromCurrency)?.value || 1;\n    const toRate = this.forexRates.find(rate => rate.id === toCurrency)?.value || 1;\n    return value / fromRate * toRate;\n  }\n};\nForexRatesPipe = __decorate([Pipe({\n  name: 'forexRates'\n})], ForexRatesPipe);\nexport { ForexRatesPipe };","map":{"version":3,"names":["Pipe","ForexRatesPipe","constructor","forexRates","transform","value","fromCurrency","toCurrency","fromRate","find","rate","id","toRate","__decorate","name"],"sources":["/home/coder/project/workspace/angularapp/src/app/forex.pipe.ts"],"sourcesContent":["import { Pipe, PipeTransform } from '@angular/core';\n\n@Pipe({\n  name: 'forexRates',\n})\nexport class ForexRatesPipe implements PipeTransform {\n  constructor(private forexRates: { id: string, value: number }[]) {}\n\n  transform(value: number, fromCurrency: string, toCurrency: string): number {\n    const fromRate = this.forexRates.find(rate => rate.id === fromCurrency)?.value || 1;\n    const toRate = this.forexRates.find(rate => rate.id === toCurrency)?.value || 1;\n\n    return (value / fromRate) * toRate;\n  }\n}"],"mappings":";AAAA,SAASA,IAAI,QAAuB,eAAe;AAKnD,IAAaC,cAAc,GAA3B,MAAaA,cAAc;EACzBC,YAAoBC,UAA2C;IAA3C,KAAAA,UAAU,GAAVA,UAAU;EAAoC;EAElEC,SAASA,CAACC,KAAa,EAAEC,YAAoB,EAAEC,UAAkB;IAC/D,MAAMC,QAAQ,GAAG,IAAI,CAACL,UAAU,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKL,YAAY,CAAC,EAAED,KAAK,IAAI,CAAC;IACnF,MAAMO,MAAM,GAAG,IAAI,CAACT,UAAU,CAACM,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,EAAE,KAAKJ,UAAU,CAAC,EAAEF,KAAK,IAAI,CAAC;IAE/E,OAAQA,KAAK,GAAGG,QAAQ,GAAII,MAAM;EACpC;CACD;AATYX,cAAc,GAAAY,UAAA,EAH1Bb,IAAI,CAAC;EACJc,IAAI,EAAE;CACP,CAAC,C,EACWb,cAAc,CAS1B;SATYA,cAAc"},"metadata":{},"sourceType":"module","externalDependencies":[]}